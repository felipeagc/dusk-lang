// type Hello struct {

// };

// [push_constant] let pc : struct {
	
// };

// [binding(0)] let hello : Hello; 
// [binding(1)] let image : @Image(float3);
// [binding(2)] let sampler : @Sampler();

[input, location(0)] let in_pos : float3;
[input, location(1)] let in_uv : float2;
[output, builtin_gl_position] let out_position : float4;
[output, location(0)] let out_uv : float2;

fn test() int {
    let a: int = 321;
    let b: int = 123;
    let c: int = a;
    let hey: bool = false;
    a = 456;
    a = b;
    return 123;
}

[entry_point("vertex")]
fn vs_main() void {
    // out_uv = in_uv;
    // out_position = float4(in_pos, 1);
}

[input, location(0)] let uv : float2;
[output, location(0)] let out_color : float4;

[entry_point("fragment")]
fn fs_main() void {
    // let color: float4 = @sample(sampler, image, uv);

    // out_color = float4(color, 1.0);
}
